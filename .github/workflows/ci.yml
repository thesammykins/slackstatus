name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check

      - name: Run tests
        run: npm test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: matrix.node-version == '20.x'
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  macos-build:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            macos/package-lock.json

      - name: Verify build tools
        run: |
          xcode-select --version
          node --version
          npm --version
          iconutil --version

      - name: Install macOS dependencies
        run: |
          cd macos
          npm install

      - name: Build icons
        run: |
          cd macos
          npm run build-icons
        continue-on-error: false

      - name: Validate icon generation
        run: |
          cd macos
          if [ ! -f "assets/icon.icns" ]; then
            echo "Warning: icon.icns not found, build may fail"
            ls -la assets/
          fi

      - name: Build macOS app
        run: |
          cd macos
          npm run build:mac
        env:
          CI: true
          CSC_IDENTITY_AUTO_DISCOVERY: false
          SKIP_NOTARIZATION: true

      - name: Validate build output
        run: |
          cd macos
          if [ -d "dist/mac" ]; then
            echo "Build successful - checking outputs:"
            ls -la dist/
          else
            echo "Build failed - no output directory found"
            exit 1
          fi

      - name: Test integration
        run: |
          cd macos
          if [ -f "test-integration.js" ]; then
            node test-integration.js
          else
            echo "No integration tests found, skipping"
          fi
        continue-on-error: true

      - name: Upload macOS build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: macos-app-${{ github.sha }}
          path: |
            macos/dist/
          retention-days: 7
          if-no-files-found: warn

  macos-distribution:
    runs-on: macos-latest
    needs: macos-build
    timeout-minutes: 45
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            macos/package-lock.json

      - name: Install macOS dependencies
        run: |
          cd macos
          npm install

      - name: Build icons
        run: |
          cd macos
          npm run build-icons

      - name: Create distribution packages
        run: |
          cd macos
          npm run dist
        env:
          CI: true
          CSC_IDENTITY_AUTO_DISCOVERY: false
          SKIP_NOTARIZATION: true

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-distribution-${{ github.sha }}
          path: |
            macos/dist/*.dmg
            macos/dist/*.zip
          retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@v3.82.13
        with:
          path: ./
          base: main
          head: HEAD
